---
title: "ECON 470 Homework 4-1"
author: "Ellen Wu"
format: pdf
execute:
    echo: false
---
####### The link to my repository: https://github.com/ellenwu-git/homework4

```{python}
#| echo: false

# Import libraries
import pandas as pd
import numpy as np
import os
from sklearn.linear_model import LogisticRegression
import statsmodels.api as sm
from scipy.spatial.distance import cdist
import matplotlib.pyplot as plt
import statsmodels.api as sm
import matplotlib.ticker as ticker
import matplotlib
import seaborn as sns
from statsmodels.formula.api import ols
from causalinference import CausalModel
from IPython.display import Markdown, display
from linearmodels.iv import IV2SLS
import warnings
warnings.simplefilter('ignore')

# Load data
df= pd.read_csv("/Users/ellenwu/homework4/data/output/final_ma_data.csv")
```

####### 1. Remove all SNPs, 800-series plans, and prescription drug only plans (i.e., plans that do not offer Part C benefits). Provide a box and whisker plot showing the distribution of plan counts by county over time. Do you think that the number of plans is sufficient, too few, or too many?

```{python}
#| echo: false

df= pd.read_csv("/Users/ellenwu/homework4/data/output/final_ma_data.csv")

cleaned = df.copy()

#Remove Special Needs Plans (SNPs)
cleaned = cleaned[cleaned["snp"] != "Yes"]

#Remove 800-series plans (planid starts with 800)
cleaned = cleaned[~cleaned["planid"].astype(str).str.startswith("800")]

#Remove prescription drug only plans (i.e., keep only those that offer Part C)
# Usually plan_type == 'PDP' means drug-only, so remove those
cleaned = cleaned[cleaned["plan_type"] != "PDP"]

# Group by county and year to count plans
county_plan_counts = (
    cleaned.groupby(["state", "county", "year"])
    .size()
    .reset_index(name="plan_count")
)

# Box and whisker plot
plt.figure(figsize=(12, 6))
sns.boxplot(data=county_plan_counts, x="year", y="plan_count")

plt.title("Distribution of Plan Counts per County Over Time")
plt.xlabel("Year")
plt.ylabel("Number of Available Plans per County")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

```

\newpage

####### 2. Provide bar graphs showing the distribution of star ratings in 2010, 2012, and 2015. How has this distribution changed over time?

```{python}
#| echo: false
 
df= pd.read_csv("/Users/ellenwu/homework4/data/output/final_ma_data.csv")

# Filter for the years of interest
years_to_plot = [2010, 2012, 2015]
ratings_subset = df[
    (df["year"].isin(years_to_plot)) & (df["Star_Rating"].notna())
]

plt.figure(figsize=(15, 5))

for i, year in enumerate(years_to_plot):
    data_year = ratings_subset[ratings_subset["year"] == year]
    
    if data_year.empty:
        print(f"⚠️ No data for year {year}")
        continue
    
    plt.subplot(1, 3, i + 1)
    sns.countplot(data=data_year, x="Star_Rating", palette="viridis")
    plt.title(f"Star Ratings - {year}")
    plt.xlabel("Star Rating")
    plt.ylabel("Number of Plans")

plt.tight_layout()
plt.show()


```

\newpage 

####### 3. Plot the average benchmark payment over time from 2010 through 2015. How much has the average benchmark payment risen over the years?

```{python}
#| echo: false

df= pd.read_csv("/Users/ellenwu/homework4/data/output/final_ma_data.csv")

# Filter for years 2010–2015
bench_2010_2015 = df[
    (df["year"].between(2010, 2015)) & 
    (df["ma_rate"].notna())
]

# Group by year and calculate the average benchmark
avg_benchmark = (
    bench_2010_2015.groupby("year")["ma_rate"]
    .mean()
    .reset_index()
)

plt.figure(figsize=(8, 5))
plt.plot(avg_benchmark["year"], avg_benchmark["ma_rate"], marker='o', linestyle='-')
plt.title("Average MA Benchmark Payment (2010–2015)")
plt.xlabel("Year")
plt.ylabel("Average Benchmark Payment ($)")
plt.grid(True)
plt.tight_layout()
plt.show()

```

\newpage

####### 4. Plot the average share of Medicare Advantage (relative to all Medicare eligibles) over time from 2010 through 2015. Has Medicare Advantage increased or decreased in popularity? How does this share correlate with benchmark payments?

####### 5. Calculate the running variable underlying the star rating. Provide a table showing the number of plans that are rounded up into a 3-star, 3.5-star, 4-star, 4.5-star, and 5-star rating.

####### 6. Using the RD estimator with a bandwidth of 0.125, provide an estimate of the effect of receiving a 3-star versus a 2.5 star rating on enrollments. Repeat the exercise to estimate the effects at 3.5 stars, and summarize your results in a table.

####### 7. Repeat your results for bandwidhts of 0.1, 0.12, 0.13, 0.14, and 0.15 (again for 3 and 3.5 stars). Show all of the results in a graph. How sensitive are your findings to the choice of bandwidth?

####### 8. Examine (graphically) whether contracts appear to manipulate the running variable. In other words, look at the distribution of the running variable before and after the relevent threshold values. What do you find?

####### 9. Similar to question 4, examine whether plans just above the threshold values have different characteristics than contracts just below the threshold values. Use HMO and Part D status as your plan characteristics.

####### 10. Summarize your findings from 5-9. What is the effect of increasing a star rating on enrollments? Briefly explain your results.
